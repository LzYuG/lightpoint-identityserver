@page "/LogAuditingBusiness/ServerRunningLog"

@using LightPoint.IdentityServer.Domain.DomainModels.DM04.LogAuditingResources
@using LightPoint.IdentityServer.DtoModels.DM04.LogAuditingResources
@inherits PageBase<Guid, ServerRunningLog, ServerRunningLogDM, ServerRunningLogDM>

<CardBox Title="系统运行日志">
    <Tools>
        <Space>
            <SpaceItem><RangePicker @bind-Value="DateTimeSearchParams" ShowTime='@("HH:mm")' OnChange="@((DateRangeChangedEventArgs<DateTime?[]> args) => Search())" /></SpaceItem>
            <SpaceItem><Input Placeholder="输入关键字搜索" @bind-Value="TableParameters.SearchTerm"></Input></SpaceItem>
            <SpaceItem><Button Type="@ButtonType.Primary" OnClick="Search">搜索</Button></SpaceItem>
        </Space>
    </Tools>
    <Content>
        <LightPointTable @ref="LightPointTableRef" TModel="ServerRunningLogDM" @bind-TableParameters="@TableParameters" Search="Search">
            <LightPointTdSlot TModel="ServerRunningLogDM" Name="Operation">
                <Button Type="@ButtonType.Primary" OnClick="()=> OpenForm(context.Model)">详情</Button>
                <Button Type="@ButtonType.Primary" Danger OnClick="()=> Delete(context.Model.Id)">删除</Button>
             </LightPointTdSlot>
         </LightPointTable>

         <LightPointDialogForm ReadOnly TModel="ServerRunningLogDM" @ref="LightPointFormRef" FormItemConfigs="FormItemConfigs">
         </LightPointDialogForm>
     </Content>
 </CardBox>

 @code {

    private DateTime?[] DateTimeSearchParams = new DateTime?[2] { DateTime.Now.Date, DateTime.Now };

    public override TableParameters<ServerRunningLogDM> TableParameters { get; set; } = new TableParameters<ServerRunningLogDM>()
        {
            Length = 15,
            TableColumnInfos = new List<TableColumnInfo>()
            {
                new TableColumnInfo(){ Prop = nameof(ServerRunningLogDM.CreateTime), Header = "产生时间", Sortable = true},
                new TableColumnInfo(){ Prop = nameof(ServerRunningLogDM.ServerRunningLogType), Header = "日志类型", Sortable = true},
                new TableColumnInfo(){ Prop = nameof(ServerRunningLogDM.RemoteIP), Header = "登录地址", Sortable = true},
                new TableColumnInfo(){ Prop = "Operation", Header = "操作", HasSlot = true},
            },
        };

    public override List<FormItemConfig> FormItemConfigs { get; set; } = new List<FormItemConfig>()
    {
        new FormItemConfig(){ FormItemType = FormItemType.文本框, Label = "Id", Placeholder = "Id", Prop = nameof(ServerRunningLogDM.Id)},
        new FormItemConfig(){ FormItemType = FormItemType.日期时间选择器, Label = "产生时间", Placeholder = "产生时间", Prop = nameof(ServerRunningLogDM.CreateTime)},
        new FormItemConfig(){ FormItemType = FormItemType.文本框, Label = "日志类型", Placeholder = "日志类型", Prop = nameof(ServerRunningLogDM.ServerRunningLogType) },
        new FormItemConfig(){ FormItemType = FormItemType.文本框, Label = "登录地址", Placeholder = "登录地址", Prop = nameof(ServerRunningLogDM.RemoteIP) },
        new FormItemConfig(){ FormItemType = FormItemType.多行文本框, Label = "详细描述", Placeholder = "详细描述", Prop = nameof(ServerRunningLogDM.Description) },
        new FormItemConfig(){ FormItemType = FormItemType.多行文本框, Label = "错误", Placeholder = "错误", Prop = nameof(ServerRunningLogDM.Errors) },
    };

    public override Expression<Func<ServerRunningLog, bool>> MontageSearchExpression(TableParameters<ServerRunningLogDM> TableParameters)
    {
        if (DateTimeSearchParams.Length == 2 && DateTimeSearchParams[0] != null && DateTimeSearchParams[1] != null)
        {
            return x => x.CreateTime.Date >= DateTimeSearchParams[0] && x.CreateTime <= DateTimeSearchParams[1];
        }
        return null!;
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await Search();
            StateHasChanged();
        }

        base.OnAfterRender(firstRender);
    }
}
